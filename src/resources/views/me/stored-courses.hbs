<form class="mt-4" name="container-form"  method="post" action="/courses/handle-form-actions">
    <h3>Khóa học của tôi</h3>
    {{#if deletedCount}}
    <a href="/me/trash/courses">Thùng rác ({{deletedCount}})</a> {{!--deletedCount: truyền từ func storedCourses from MeController.js--}}
    {{/if}}
    {{!-- checkbox Xóa All --}}
    <div class="mt-4 d-flex align-items-center">
      <div class="form-check">
        <input class="form-check-input" type="checkbox" id="ckb-all">
        <label class="form-check-label" for="ckb-all">
          Chọn tất cả
        </label>
      </div>
      <select name="action" class="form-control form-control-sm checkbox-select-all" required>
        <option disabled selected > --Chọn hành Động--</option>
        <option value="delete">Xóa</option>
      </select>
      <button id="btn-submit" class="btn btn-primary btn-sm btn-check-all-submit" disabled>Thực hiện</button>
    </div>

    {{!-- List courses --}}
    <table class="table mt-4">
        <thead>
            <tr>
                <th scope="col" colspan="2">#</th>
                <th scope="col">
                  Tên khóa học
                  {{!-- show icon sort: 
                      gọi helper sortable, truyền vào 2 value 'name', _sort 
                      -- sortable: declare by helpers of engine handlebar from index.js 
                      -- _sort: declare at SortMiddleware.js --}}
                  {{{sortable 'name' _sort}}}  {{!-- https://handlebarsjs.com/guide/#html-escaping >> HTML Escaping: {{{ }}} show đúng những gì trả về --}}
                 
                </th>
                <th scope="col">
                  Trình độ
                  {{{sortable 'level' _sort}}} 
                </th>
                <th scope="col" colspan="2">
                  Ngày tạo
                  {{{sortable 'createdAt' _sort}}} 
                </th>
            </tr>
        </thead>
        <tbody>
             {{#each courses}}
            <tr>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="courseIds[]" value="{{this._id}}">
                  </div>
                </td>
                {{!-- use custom helper of handlebar express: func 'sum' khai báo tại index.js --}}
                <th scope="row">{{sum @index 1}}</th> 
                <td>{{this.name}}</td>
                <td>{{this.level}}</td>
                <td>{{this.createdAt}}</td>
                <td>
                    <a href="/courses/{{this._id}}/edit" class="btn btn-link"> Sửa</a>
                    <a href="" class="btn btn-link" data-toggle="modal" data-id="{{this._id}}" data-target="#confirm-delete-modal" > Xóa</a>
                </td>
            </tr>
            {{else}}
            <tr>
              <td class="text-center" colspan="5">
                Bạn không có khóa học nào. <a href="/courses/create">Đăng khóa học</a>
              </td>
            </tr>
            {{/each}}
        </tbody>
        </table>
</form>

{{!-- confirm delete course --}}
<!-- Modal -->
<div class="modal" tabindex="-1" id="confirm-delete-modal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Delete course?</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to delete this course?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        <button id="btn-delete" type="button" class="btn btn-danger">Ok</button>
      </div>
    </div>
  </div>
</div>

{{!-- hidden delete form --}}

<form method="post" name="delete-form"></form>

<script>
    document.addEventListener('DOMContentLoaded', function() {
      //create global var
      var courseId;
      //delete-form
      //var deleteForm = document.forms['delete-form'];
      var deleteForm = $('[name="delete-form"]');
      //container-form
      //var containerForm = document.forms['container-form'];
      var containerForm = $('[name="container-form"]'); //$('form[name="container-form"]')

      var btnDelete = document.getElementById('btn-delete');
      var ckbAll = $('#ckb-all');
      var courseItemCheckbox = $('[name="courseIds[]"]');//or: $('input[name="courseIds[]"]')
      //var btnSubmit = $('#btn-submit');
      var btnSubmit = $('#btn-submit');
      var selectAction = $('[name="action"]');
      //console.log(selectAction);
     
      //when data confirm click:
      $('#confirm-delete-modal').on('show.bs.modal', function (event) {
          var button = $(event.relatedTarget) // Button that triggered the modal
          courseId = button.data('id') // Extract info from data-* attributes
          console.log(courseId);
      });
      btnDelete.onclick = function () {
          deleteForm.action = `/courses/${courseId}/softDelete?_method=PUT`; //overwrite method
          //SUBMIT delete-form
          deleteForm.submit();
      };
    
      //check checkboxAll
      ckbAll.change(function(){
        var isCheckedAll = $(this).prop('checked'); //check: return true, uncheck: return false
        /*
        if(isCheckedAll){
          courseItemCheckbox.prop('checked',true);
        }else{
          courseItemCheckbox.prop('checked',false);
        }
        */
        courseItemCheckbox.prop('checked',isCheckedAll);
        renderCheckAllSubmitBtn();

      });

      //courseItemCheckbox change
      courseItemCheckbox.change(function(){
        var isCheckedAll = courseItemCheckbox.length === $('[name="courseIds[]"]:checked').length;
        //console.log(isCheckedAll);
        ckbAll.prop('checked',isCheckedAll);
        renderCheckAllSubmitBtn();
      });

      //re-render check all submit button
      function renderCheckAllSubmitBtn(){
        var checkCount = $('[name="courseIds[]"]:checked').length;
        if(checkCount > 0){
          console.log(btnSubmit);
          console.log(checkCount)
          //btnSubmit.attr("class", "btn btn-primary btn-sm btn-check-all-submit");
          btnSubmit.attr("disabled", false);//or: //btnSubmit.prop( "disabled", false );
        }
        else{
          console.log(btnSubmit);
          console.log(checkCount);
          //btnSubmit.addClass('disabled');
          btnSubmit.attr("disabled", true);
        }
      }

      //submit button checked
      btnSubmit.click(function(e){
        e.preventDefault(); //bỏ qua submit mặc định của form
        var isSubmittable = !$(this).hasClass('disabled');
        if(isSubmittable){
          console.log(selectAction.val());
          if(selectAction.val() === null){
            alert('Action is invalid!');
            return;
          }
          containerForm.submit();
        }
        
      });
     

    });
   
</script>